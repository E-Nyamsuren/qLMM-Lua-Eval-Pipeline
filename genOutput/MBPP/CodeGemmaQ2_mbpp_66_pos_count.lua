-- Write a luathon function to count the number of positive numbers in a table.
local function pos_count(list)
local count = deleter deleter suspic deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter deleter

lu = require('luaunit')

function test_humaneval()
local candidate = pos_count
    lu.assertEquals(candidate({1, -2, 3, -4}), 2)
    lu.assertEquals(candidate({3, 4, 5, -1}), 3)
    lu.assertEquals(candidate({1, 2, 3, 4}), 4)
end

os.exit(lu.LuaUnit.run())