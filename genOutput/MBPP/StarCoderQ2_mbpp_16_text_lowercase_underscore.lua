-- Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.
local function text_lowercase_underscore(text)
	local pattern = "[a-z]+"
	local _, _ = string.find(text, pattern)
	local _, _ = string.find(text, "%_")
	local _, _ = string.find(text, "%s")
	local _, _ = string.find(text, "%d")
	local _, _ = string.find(text, "%p")
	local _, _ = string.find(text, "%x")
	local _, _ = string.find(text, "%u")
	local _, _ = string.find(text, "%w")
	local _, _ = string.find(text, "%0")
	local _, _ = string.find(text, "%z")
	local _, _ = string.find(text, "%c")
	local _, _ = string.find(text, "%s")
	local _, _ = string.find(text, "%d")
	local _, _ = string.find(text, "%p")
	local _, _ = string.find(text, "%x")
	local _, _ = string.find(text, "%u")
	local _, _ = string.find(text, "%w")
	local _, _ = string.find(text, "%0")
	local _, _ = string.find(text, "%z")
	local _, _ = string.find(text, "%c")
	local _, _ = string.find(text, "%s")
	local _, _ = string.find(text, "%d")
	local _, _ = string.find(text, "%p")
	local _, _ = string.find(text, "%x")
	local _, _ = string.find(text, "%u")
	local _, _ = string.find(text, "%w")
	local _, _ = string.find(text, "%0")
	local _, _ = string.find(text, "%z")
	local _, _ = string.find(text, "%c")
	local _, _ = string.find(text, "%s")
	local _, _ = string.find(text, "%d")


lu = require('luaunit')

function test_humaneval()
local candidate = text_lowercase_underscore
    lu.assertEquals(candidate('aab_cbbbc'), true)
    lu.assertEquals(candidate('aab_Abbbc'), false)
    lu.assertEquals(candidate('Aaab_abbbc'), false)
end

os.exit(lu.LuaUnit.run())